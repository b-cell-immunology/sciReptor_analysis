# Generate a plain table showing the associated segments
# Requires: temporary tables generated by "create_temp_table_VDJ.sql"
#

SELECT
	`event`.event_id,
	`event`.plate,
	`event`.well,
	donor.donor_identifier,
	sort.population,
	temp_associated.*
FROM (
	SELECT 
		temp_heavy.event_id,
		temp_heavy.v_segment_name	AS igh_segment_v,
		temp_heavy.d_segment_name	AS igh_segment_d,
		temp_heavy.j_segment_name	AS igh_segment_j,
		temp_heavy.CDR3				AS igh_cdr3,
		temp_heavy.c_segment_name	AS igh_segment_c,
		temp_kappa.v_segment_name	AS igk_segment_v,
		temp_kappa.j_segment_name	AS igk_segment_j,
		temp_kappa.CDR3				AS igk_cdr3,
		temp_kappa.c_segment_name	AS igk_segment_c,
		temp_lambda.v_segment_name	AS igl_segment_v,
		temp_lambda.j_segment_name	AS igl_segment_j,
		temp_lambda.CDR3			AS igl_cdr3,
		temp_lambda.c_segment_name	AS igl_segment_c
	FROM (
		SELECT 
			sequences.event_id,
			temp_table_H_VDJ.v_segment_name,
			temp_table_H_VDJ.d_segment_name,
			temp_table_H_VDJ.j_segment_name,
			CDR.prot_seq AS CDR3,
			temp_table_H_VDJ.c_segment_name
		FROM temp_table_H_VDJ
		INNER JOIN (
			SELECT seq_id, prot_seq FROM CDR_FWR WHERE region='CDR3'
			) AS CDR
		INNER JOIN sequences
		ON temp_table_H_VDJ.seq_id = CDR.seq_id
			AND temp_table_H_VDJ.seq_id = sequences.seq_id
		WHERE temp_table_H_VDJ.igblast_rank=1
			AND sequences.consensus_rank=1
	) AS temp_heavy
	LEFT OUTER JOIN (
		SELECT 
			sequences.event_id,
			temp_table_K_VJ.v_segment_name,
			temp_table_K_VJ.j_segment_name,
			CDR.prot_seq AS CDR3,
			temp_table_K_VJ.c_segment_name
		FROM temp_table_K_VJ
		INNER JOIN (
			SELECT seq_id, prot_seq FROM CDR_FWR WHERE region='CDR3'
		) AS CDR
		INNER JOIN sequences
		ON temp_table_K_VJ.seq_id = CDR.seq_id
			AND temp_table_K_VJ.seq_id = sequences.seq_id
		WHERE temp_table_K_VJ.igblast_rank=1
			AND sequences.consensus_rank=1
	) AS temp_kappa
	ON temp_heavy.event_id = temp_kappa.event_id
	LEFT OUTER JOIN (
		SELECT 
			sequences.event_id,
			temp_table_L_VJ.v_segment_name,
			temp_table_L_VJ.j_segment_name,
			CDR.prot_seq AS CDR3,
			temp_table_L_VJ.c_segment_name
		FROM temp_table_L_VJ
		INNER JOIN (
			SELECT seq_id, prot_seq FROM CDR_FWR WHERE region='CDR3'
		) AS CDR
		INNER JOIN sequences
		ON temp_table_L_VJ.seq_id = CDR.seq_id
			AND temp_table_L_VJ.seq_id = sequences.seq_id
		WHERE temp_table_L_VJ.igblast_rank=1
			AND sequences.consensus_rank=1
	) AS temp_lambda
	ON temp_heavy.event_id = temp_lambda.event_id
    WHERE temp_kappa.v_segment_name IS NOT NULL 
		OR temp_lambda.v_segment_name IS NOT NULL
) AS temp_associated 
INNER JOIN `event`
INNER JOIN sort
INNER JOIN sample
INNER JOIN donor
ON `event`.event_id = temp_associated.event_id
	AND sample.donor_id = donor.donor_id
	AND `event`.sort_id = sort.sort_id
	AND sort.sample_id = sample.sample_id
;
